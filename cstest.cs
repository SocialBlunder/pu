/*Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:

Triangle        Tn=n(n+1)/2     1, 3, 6, 10, 15, ...
Pentagonal      Pn=n(3n−1)/2        1, 5, 12, 22, 35, ...
Hexagonal       Hn=n(2n−1)      1, 6, 15, 28, 45, ...
It can be verified that T285 = P165 = H143 = 40755.

Find the next triangle number that is also pentagonal and hexagonal.
*/

using System;

public class Problem45 {
	static public void Main () {
        int tri = 1, pent = 1, hex = 1;
  
        int value = 40756;
        bool isTrue = true;
	int n = 0;
	int upperBound = 50000;

        bool isTrue1 = true;
        bool isTrue2 = true;
	bool isTrue3 = true;

        while (isTrue)
        {
		n = 0;
		while (n<upperBound && isTrue1){
			tri = n*(n+1)/2;
                	if (tri == value) {
				isTrue1 = false;
				tri = n*(n+1)/2;
				Console.WriteLine("tri passed: n = " + n);
				n = 0;
			}
			else
			{
			//	Console.WriteLine("tri failed: n = " + n);
				n=n+1;
			}
                }

		n = 0;
                while (n<upperBound && isTrue2){ 
			pent = n*(3*n - 1)/2;
                        if (pent == value) {
                                isTrue2 = false;
                                pent = n*(3*n-1)/2;
                                Console.WriteLine("pent passed");
				n = 0;
                        }       
                        else{n=n+1;}
                }

		n = 0;
		while (n<upperBound && isTrue3){
			hex = n*(2*n-1);
			if (hex == value) {
				isTrue3 = false;
				hex = n*(3*n-1)/2;
                                Console.WriteLine("hex passed");
				n = 0;
			}
			else{n=n+1;}
		}


		if (!isTrue1 && !isTrue2 && !isTrue3) {
			isTrue = false;
			Console.WriteLine("everything passed! value = " + value);
		}
		else
		{
	        	isTrue1 = true;
        		isTrue2 = true;
        		isTrue3 = true;
			value++;
                        Console.WriteLine("value failed. value = " + value);
		}
		
	}
